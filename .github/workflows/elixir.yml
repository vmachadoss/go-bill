# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Code Quality

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  checks: write

env:
  TZ: "/usr/share/zoneinfo/America/Sao_Paulo"
  LANG: C.UTF-8

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:14.4-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1.15.4
        with:
          elixir-version: "1.15.7" # [Required] Define the Elixir version
          otp-version: "26.1.1" # [Required] Define the Erlang/OTP version

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Code Format
        run: mix format --check-formatted

      - name: Compile project
        run: mix compile --warnings-as-errors

      - name: Test rollback
        run: |
          MIX_ENV=test mix do ecto.create, ecto.migrate --quiet --no-compile --pool-size 5
          MIX_ENV=test mix ecto.rollback --all

      - name: Run tests
        run: mix test
